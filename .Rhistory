y = body_mass_g)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
theme_minimal() +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin size, Palmer Station LTER",
subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.2, 0.7),
legend.background = element_rect(fill = "white", color = NA),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
mass_flipper
#> Warning: Removed 2 rows containing missing values (geom_point).
knitr::opts_chunk$set(echo = FALSE)
rmarkdown::render("CursoR_Sesion2.Rmd")
knitr::opts_chunk$set(echo = FALSE)
mass_flipper <- ggplot(data = penguins,
aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
theme_minimal() +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin size, Palmer Station LTER",
subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.2, 0.7),
legend.background = element_rect(fill = "white", color = NA),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
mass_flipper
mass_hist <- ggplot(data = penguins, aes(x = body_mass_g)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity") +
scale_fill_manual(values = c("darkorange","purple","cyan4")) +
theme_minimal() +
labs(x = "Body mass (g)",
y = "Frequency",
title = "Penguin body mass")
mass_hist
bill_len_dep <- ggplot(data = penguins,
aes(x = bill_length_mm,
y = bill_depth_mm,
group = species)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
geom_smooth(method = "lm", se = FALSE, aes(color = species)) +
theme_minimal() +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.85, 0.15),
legend.background = element_rect(fill = "white", color = NA),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
bill_len_dep
mass_flipper <- ggplot(data = penguins,
aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
theme_minimal() +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin size, Palmer Station LTER",
subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.2, 0.7),
legend.background = element_rect(fill = "white", color = NA),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
mass_flipper
# Get data:
library(gapminder)
install.packages("gapminder")
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
install.packages("gganimate")
library(gganimate)
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
# Make a ggplot, but add frame=year: one image per year
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
# Save at gif:
anim_save("271-ggplot2-animated-gif-chart-with-gganimate1.gif")
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
# Make a ggplot, but add frame=year: one image per year
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
# Make a ggplot, but add frame=year: one image per year
anim <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy')
anim +
transition_time(year) +
ease_aes('linear')
anim_save("271-ggplot2-animated-gif-chart-with-gganimate1.gif")
install.packages("gifski")
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
# Make a ggplot, but add frame=year: one image per year
anim <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy')
anim +
transition_time(year) +
ease_aes('linear')
anim_save("271-ggplot2-animated-gif-chart-with-gganimate1.gif", renderer = gifski_renderer())
p
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p
p + transition_time(year) +
labs(title = "Year: {frame_time}")
file_renderer(dir = ".", prefix = "gganim_plot", overwrite = FALSE)
p + transition_time(year) +
labs(title = "Year: {frame_time}")
install.packages("png")
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("./images/tidydataworkflow.png")
knitr::include_graphics("lubridate_1.jpeg")
library(lubridate, warn.conflicts = FALSE)
ymd(20101215)
mdy("4/1/17")
time <- ymd_hms("2010-12-13 15:30:30")
time
force_tz(time, "America/Chicago")
penguins
library(palmerpenguins)
library(ggplot2)
library(tidyverse)
## calculate bill ratio and summary stats
df_peng_stats <-
penguins %>%
mutate(bill_ratio = bill_length_mm / bill_depth_mm) %>%
filter(!is.na(bill_ratio)) %>%
group_by(species) %>%
mutate(
n = n(),
median = median(bill_ratio),
max = max(bill_ratio)
) %>%
ungroup() %>%
mutate(species_num = as.numeric(fct_rev(species)))
## create a second chart with raincloud plots
p2 <-
ggplot(df_peng_stats, aes(bill_ratio, species_num, color = species)) +
stat_summary(
geom = "linerange",
fun.min = function(x) -Inf,
fun.max = function(x) median(x, na.rm = TRUE),
linetype = "dotted",
orientation = "y",
size = .7
) +
geom_point(
aes(y = species_num - .15),
shape = "|",
size = 5,
alpha = .33
) +
ggdist::stat_halfeye(
aes(
y = species_num,
color = species,
fill = after_scale(colorspace::lighten(color, .5))
),
shape = 18,
point_size = 3,
interval_size = 1.8,
adjust = .5,
.width = c(0, 1)
) +
geom_text(
aes(x = median, label = format(round(median, 2), nsmall = 2)),
stat = "unique",
color = "white",
family = "Open Sans",
fontface = "bold",
size = 3.4,
nudge_y = .15
) +
geom_text(
aes(x = max, label = glue::glue("n = {n}")),
stat = "unique",
family = "Open Sans",
fontface = "bold",
size = 3.5,
hjust = 0,
nudge_x = .01,
nudge_y = .02
) +
coord_cartesian(clip = "off", expand = FALSE) +
scale_x_continuous(
limits = c(1.6, 3.8),
breaks = seq(1.6, 3.8, by = .2)
) +
scale_y_continuous(
limits = c(.55, NA),
breaks = 1:3,
labels = c("Gentoo", "Chinstrap", "AdÃ©lie")
) +
scale_color_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none") +
scale_fill_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none") +
labs(
x = "Bill ratio",
y = NULL,
subtitle = "B. Raincloud plot showing the distribution of bill ratios, estimated as bill length divided by bill depth.",
caption = "Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst"
) +
theme(
panel.grid.major.x = element_line(size = .35),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 13),
axis.ticks.length = unit(0, "lines"),
plot.title.position = 'plot',
plot.subtitle = element_text(margin = margin(t = 5, b = 10)),
plot.margin = margin(10, 25, 10, 25)
)
library(tidyverse)   ## data science package collection (incl. the ggplot2 package)
library(systemfonts) ## use custom fonts (need to be installed on your OS)
install.packages("ggdist")
library(ggdist)      ## add uncertainity visualizations to ggplot2
## calculate bill ratio and summary stats
df_peng_stats <-
penguins %>%
mutate(bill_ratio = bill_length_mm / bill_depth_mm) %>%
filter(!is.na(bill_ratio)) %>%
group_by(species) %>%
mutate(
n = n(),
median = median(bill_ratio),
max = max(bill_ratio)
) %>%
ungroup() %>%
mutate(species_num = as.numeric(fct_rev(species)))
## create a second chart with raincloud plots
p2 <-
ggplot(df_peng_stats, aes(bill_ratio, species_num, color = species)) +
stat_summary(
geom = "linerange",
fun.min = function(x) -Inf,
fun.max = function(x) median(x, na.rm = TRUE),
linetype = "dotted",
orientation = "y",
size = .7
) +
geom_point(
aes(y = species_num - .15),
shape = "|",
size = 5,
alpha = .33
) +
ggdist::stat_halfeye(
aes(
y = species_num,
color = species,
fill = after_scale(colorspace::lighten(color, .5))
),
shape = 18,
point_size = 3,
interval_size = 1.8,
adjust = .5,
.width = c(0, 1)
) +
geom_text(
aes(x = median, label = format(round(median, 2), nsmall = 2)),
stat = "unique",
color = "white",
family = "Open Sans",
fontface = "bold",
size = 3.4,
nudge_y = .15
) +
geom_text(
aes(x = max, label = glue::glue("n = {n}")),
stat = "unique",
family = "Open Sans",
fontface = "bold",
size = 3.5,
hjust = 0,
nudge_x = .01,
nudge_y = .02
) +
coord_cartesian(clip = "off", expand = FALSE) +
scale_x_continuous(
limits = c(1.6, 3.8),
breaks = seq(1.6, 3.8, by = .2)
) +
scale_y_continuous(
limits = c(.55, NA),
breaks = 1:3,
labels = c("Gentoo", "Chinstrap", "AdÃ©lie")
) +
scale_color_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none") +
scale_fill_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none") +
labs(
x = "Bill ratio",
y = NULL,
subtitle = "B. Raincloud plot showing the distribution of bill ratios, estimated as bill length divided by bill depth.",
caption = "Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst"
) +
theme(
panel.grid.major.x = element_line(size = .35),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 13),
axis.ticks.length = unit(0, "lines"),
plot.title.position = 'plot',
plot.subtitle = element_text(margin = margin(t = 5, b = 10)),
plot.margin = margin(10, 25, 10, 25)
)
p2
theme_set(theme_classic())
## calculate bill ratio and summary stats
penguins %>%
mutate(bill_ratio = bill_length_mm / bill_depth_mm) %>%
filter(!is.na(bill_ratio)) %>%
group_by(species) %>%
mutate(
n = n(),
median = median(bill_ratio),
max = max(bill_ratio)
) %>%
ungroup() %>%
mutate(species_num = as.numeric(fct_rev(species))) %>%
ggplot(aes(bill_ratio, species_num, color = species)) +
stat_summary(
geom = "linerange",
fun.min = function(x) -Inf,
fun.max = function(x) median(x, na.rm = TRUE),
linetype = "dotted",
orientation = "y",
size = .7
) +
geom_point(
aes(y = species_num - .15),
shape = "|",
size = 5,
alpha = .33
) +
ggdist::stat_halfeye(
aes(
y = species_num,
color = species,
fill = after_scale(colorspace::lighten(color, .5))
),
shape = 18,
point_size = 3,
interval_size = 1.8,
adjust = .5,
.width = c(0, 1)
) +
geom_text(
aes(x = median, label = format(round(median, 2), nsmall = 2)),
stat = "unique",
color = "white",
family = "Open Sans",
fontface = "bold",
size = 3.4,
nudge_y = .15
) +
geom_text(
aes(x = max, label = glue::glue("n = {n}")),
stat = "unique",
family = "Open Sans",
fontface = "bold",
size = 3.5,
hjust = 0,
nudge_x = .01,
nudge_y = .02
) +
coord_cartesian(clip = "off", expand = FALSE) +
scale_x_continuous(
limits = c(1.6, 3.8),
breaks = seq(1.6, 3.8, by = .2)
) +
scale_y_continuous(
limits = c(.55, NA),
breaks = 1:3,
labels = c("Gentoo", "Chinstrap", "AdÃ©lie")
) +
scale_color_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none") +
scale_fill_manual(values = c("#3d6721", "#a86826", "#006c89"), guide = "none") +
labs(
x = "Bill ratio",
y = NULL,
subtitle = "B. Raincloud plot showing the distribution of bill ratios, estimated as bill length divided by bill depth.",
caption = "Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst"
) +
theme(
panel.grid.major.x = element_line(size = .35),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(size = 13),
axis.ticks.length = unit(0, "lines"),
plot.title.position = 'plot',
plot.subtitle = element_text(margin = margin(t = 5, b = 10)),
plot.margin = margin(10, 25, 10, 25)
)
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("./images/folder-structure-example.png")
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("./images/chunks.png")
x <- 5  # radius of a circle
pdftools::pdf_convert("./images/rmarkdown.pdf",format = "rmarkdown",pages = 1)
install.packages("pdftools")
library(pdftools)
knitr::opts_chunk$set(echo = FALSE)
pdftools::pdf_convert("./images/tidyr.pdf",format = "jpeg",pages = 1)
pdftools::pdf_convert("./images/tidyr.pdf",format = "jpeg",pages = 2)
knitr::opts_chunk$set(echo = FALSE)
pdftools::pdf_convert("./images/rmarkdown.pdf",format = "jpeg",pages = 1, filenames = "./images/rmarkdown_1.jpeg")
pdftools::pdf_convert("./images/rmarkdown.pdf",format = "jpeg",pages = 2, filenames = "./images/rmarkdown_2.jpeg")
pdftools::pdf_convert("./images/rmarkdown.pdf",format = "jpeg",pages = 1, filenames = "./images/rmarkdown_1.jpeg")
pdftools::pdf_convert("./images/rmarkdown.pdf",format = "jpeg",pages = 2, filenames = "./images/rmarkdown_2.jpeg")
knitr::include_graphics("./images/rmarkdown_1.jpeg")
plot(cars)
update.packages(ask = FALSE, checkBuilt = TRUE)
knitr::opts_chunk$set(echo = FALSE)
library(palmerpenguins) #Set de datos para ejemplos
head(penguins)
renv::status()
renv::snapshot()
getwd()
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("./images/new_proj.png")
knitr::include_graphics("./images/rmarkdown_rockstar.png")
library(knitr)
knitr::include_graphics("./images/new_proj.png")
knitr::include_graphics("./images/rmarkdown_rockstar.png")
knitr::include_graphics("./images/rmarkdown_rockstar.png")
knitr::include_graphics("C:/Users/IHCantabria/OneDrive/Documentos/PhD/IHCantabriaExchange/CursoR/images/rmarkdown_rockstar.png")
knitr::include_graphics("./images/new_proj.png")
knitr::include_graphics("C:/Users/IHCantabria/OneDrive/Documentos/PhD/IHCantabriaExchange/CursoRC:/Users/IHCantabria/OneDrive/Documentos/PhD/IHCantabriaExchange/CursoR./images/new_proj.png")
knitr::include_graphics("C:/Users/IHCantabria/OneDrive/Documentos/PhD/IHCantabriaExchange/CursoRC:/Users/IHCantabria/OneDrive/Documentos/PhD/IHCantabriaExchange/CursoR./images/knitEjs.jpg")
knitr::include_graphics("./images/new_proj.png")
knitr::include_graphics("C:/Users/IHCantabria/OneDrive/Documentos/PhD/IHCantabriaExchange/CursoR/images/rmarkdown_rockstar.png")
knitr::include_graphics("./images/rmarkdown_rockstar.png")
getwd()
install.packages("here")
knitr::include_graphics(here("./images/rmarkdown_rockstar.png"))
knitr::include_graphics(normalizePath("./images/new_proj.png"))
knitr::include_graphics(normalizePath("./images/new_proj.png"))
